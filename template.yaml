AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Minimal AWS Lambda function with Streamable HTTP MCP Server

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    
Parameters:
  Environment:
    Type: String
    Default: production
    Description: Environment name
  DomainName:
    Type: String
    Description: Custom domain name for the API
  CertificateArn:
    Type: String
    Description: ACM Certificate ARN for the custom domain (must be in us-east-1)
  StaticFilesBucket:
    Type: String
    Default: alphavantage-mcp-web
    Description: S3 bucket name for static files (web assets)
  R2Bucket:
    Type: String
    Default: alphavantage-mcp-responses
    Description: Cloudflare R2 bucket name
  R2PublicDomain:
    Type: String
    Description: R2 public domain for CDN access
  R2EndpointUrl:
    Type: String
    Description: R2 endpoint URL
  R2AccessKeyId:
    Type: String
    Description: R2 access key ID
  R2SecretAccessKey:
    Type: String
    NoEcho: true
    Description: R2 secret access key
  AnalyticsLogsBucket:
    Type: String
    Default: alphavantage-mcp-analytics-logs
    Description: S3 bucket name for MCP analytics logs
  SubnetIds:
    Type: CommaDelimitedList
    Description: Comma-delimited list of subnet IDs for Lambda VPC deployment (optional)
    Default: ""
  LambdaSecurityGroupId:
    Type: String
    Description: Security Group ID for Lambda function (optional)
    Default: ""

Resources:
  # S3 bucket for static files
  StaticFilesBucketResource:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref StaticFilesBucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  # S3 bucket for analytics logs
  AnalyticsLogsBucketResource:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AnalyticsLogsBucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: AnalyticsLogsLifecycle
            Status: Enabled
            Transitions:
              - TransitionInDays: 30
                StorageClass: STANDARD_IA
              - TransitionInDays: 90
                StorageClass: GLACIER
            ExpirationInDays: 2555  # 7 years retention

  # CloudFront distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - !Ref DomainName
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf  # Managed-CORS-S3Origin
        CacheBehaviors:
          # API routes
          - PathPattern: /mcp*
            TargetOriginId: APIOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # Managed-CachingDisabled
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac  # Managed-AllViewerExceptHostHeader
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - PathPattern: /openai*
            TargetOriginId: APIOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # Managed-CachingDisabled
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac  # Managed-AllViewerExceptHostHeader
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - PathPattern: /.well-known*
            TargetOriginId: APIOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # Managed-CachingDisabled
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac  # Managed-AllViewerExceptHostHeader
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
          - PathPattern: /authorize*
            TargetOriginId: APIOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # Managed-CachingDisabled
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac  # Managed-AllViewerExceptHostHeader
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - PathPattern: /token*
            TargetOriginId: APIOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # Managed-CachingDisabled
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac  # Managed-AllViewerExceptHostHeader
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
          - PathPattern: /register*
            TargetOriginId: APIOrigin
            ViewerProtocolPolicy: redirect-to-https
            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  # Managed-CachingDisabled
            OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac  # Managed-AllViewerExceptHostHeader
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
              - PUT
              - PATCH
              - POST
              - DELETE
        Origins:
          - Id: S3Origin
            DomainName: !Sub '${StaticFilesBucket}.s3-website-${AWS::Region}.amazonaws.com'
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
          - Id: APIOrigin
            DomainName: !Sub '${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com'
            CustomOriginConfig:
              HTTPPort: 443
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
            OriginPath: /Prod
        Enabled: true
        DefaultRootObject: index.html
        ViewerCertificate:
          AcmCertificateArn: !Ref CertificateArn
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021

  MCPLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: server
      Handler: lambda_function.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      Role: !Sub 'arn:aws:iam::${AWS::AccountId}:role/mcp-server-lambda-execution-role'
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroupId
        SubnetIds: !Ref SubnetIds
      Events:
        RootApi:
          Type: Api
          Properties:
            Path: /
            Method: any
        ProxyApi:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          PYTHONPATH: /var/runtime
          MAX_RESPONSE_TOKENS: '10000'
          DOMAIN_NAME: !Ref DomainName
          R2_BUCKET: !Ref R2Bucket
          R2_PUBLIC_DOMAIN: !Ref R2PublicDomain
          R2_ENDPOINT_URL: !Ref R2EndpointUrl
          R2_ACCESS_KEY_ID: !Ref R2AccessKeyId
          R2_SECRET_ACCESS_KEY: !Ref R2SecretAccessKey

Outputs:
  MCPApi:
    Description: "API Gateway endpoint URL for MCP function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  CustomDomainURL:
    Description: "Custom domain URL (served via CloudFront)"
    Value: !Sub "https://${DomainName}/"
  CloudFrontDomainName:
    Description: "CloudFront distribution domain name for DNS configuration"
    Value: !GetAtt CloudFrontDistribution.DomainName
  StaticFilesBucket:
    Description: "S3 bucket for static files"
    Value: !Ref StaticFilesBucketResource
  MCPLambdaFunction:
    Description: "MCP Lambda Function ARN"
    Value: !GetAtt MCPLambdaFunction.Arn
  AnalyticsLogsBucket:
    Description: "S3 bucket for MCP analytics logs"
    Value: !Ref AnalyticsLogsBucketResource
  # MCPAnalyticsDatabase output removed - now managed by setup-glue-tables.sh script
