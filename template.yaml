AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Minimal AWS Lambda function with Streamable HTTP MCP Server

Globals:
  Function:
    Timeout: 30
    MemorySize: 256
    
Parameters:
  Environment:
    Type: String
    Default: production
    Description: Environment name
  DomainName:
    Type: String
    Description: Custom domain name for the API
  CertificateArn:
    Type: String
    Description: ACM Certificate ARN for the custom domain (must be in us-east-1)

Resources:
  CustomDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !Ref DomainName
      CertificateArn: !Ref CertificateArn
      SecurityPolicy: TLS_1_2

  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref CustomDomain
      RestApiId: !Ref ServerlessRestApi
      Stage: Prod

  ResponseBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'alphavantage-mcp-responses-${AWS::AccountId}'
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldResponses
            Status: Enabled
            ExpirationInDays: 1
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders: ['*']
            AllowedMethods: [GET]
            AllowedOrigins: ['*']
            MaxAge: 3600

  # Origin Access Control for CloudFront
  OriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${AWS::StackName}-OAC'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  # CloudFront Distribution for S3 responses
  ResponseCloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment: AlphaVantage MCP Response Distribution
        HttpVersion: http2and3
        Origins:
          - Id: S3Origin
            DomainName: !GetAtt ResponseBucket.RegionalDomainName
            S3OriginConfig:
              OriginAccessIdentity: ''
            OriginAccessControlId: !GetAtt OriginAccessControl.Id
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD, OPTIONS]
          CachedMethods: [GET, HEAD, OPTIONS]
          Compress: true
          CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6  # Managed-CachingOptimized
          ResponseHeadersPolicyId: 5cc3b908-e619-4b99-88e5-2cf7f45965bd  # CORS-With-Preflight
        PriceClass: PriceClass_100  # North America and Europe only
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  ResponseBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ResponseBucket
      PolicyDocument:
        Statement:
          - Sid: AllowCloudFrontServicePrincipal
            Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: s3:GetObject
            Resource: !Sub '${ResponseBucket.Arn}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub 'arn:aws:cloudfront::${AWS::AccountId}:distribution/${ResponseCloudFront}'

  MCPLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: lambda_function.lambda_handler
      Runtime: python3.13
      Architectures:
        - x86_64
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref ResponseBucket
      Events:
        RootApi:
          Type: Api
          Properties:
            Path: /
            Method: any
        ProxyApi:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
      Environment:
        Variables:
          ENVIRONMENT: !Ref Environment
          PYTHONPATH: /var/runtime
          RESPONSE_BUCKET: !Ref ResponseBucket
          CLOUDFRONT_DOMAIN: !Sub 'https://${ResponseCloudFront.DomainName}'
          MAX_RESPONSE_TOKENS: '10000'

Outputs:
  MCPApi:
    Description: "API Gateway endpoint URL for MCP function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  CustomDomainURL:
    Description: "Custom domain URL for MCP function"
    Value: !Sub "https://${DomainName}/"
  CustomDomainTarget:
    Description: "Custom domain target for DNS configuration"
    Value: !GetAtt CustomDomain.DistributionDomainName
  MCPLambdaFunction:
    Description: "MCP Lambda Function ARN"
    Value: !GetAtt MCPLambdaFunction.Arn
  MCPLambdaFunctionIamRole:
    Description: "Implicit IAM Role created for MCP function"
    Value: !GetAtt MCPLambdaFunctionRole.Arn
  ResponseBucket:
    Description: "S3 bucket for storing large responses"
    Value: !Ref ResponseBucket
  ResponseCloudFrontURL:
    Description: "CloudFront distribution URL for response data"
    Value: !Sub 'https://${ResponseCloudFront.DomainName}'
  ResponseCloudFrontId:
    Description: "CloudFront distribution ID"
    Value: !Ref ResponseCloudFront